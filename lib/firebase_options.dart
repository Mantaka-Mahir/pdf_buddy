// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

class DefaultFirebaseOptions {
  static Future<void> loadEnv() async {
    await dotenv.load();
  }

  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return android; // Fallback to android config for now
      case TargetPlatform.macOS:
        return web; // Fallback to web config for now
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        return web; // Fallback to web config for now
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get web => FirebaseOptions(
        apiKey: dotenv.get('FIREBASE_WEB_API_KEY'),
        appId: dotenv.get('FIREBASE_WEB_APP_ID'),
        messagingSenderId: dotenv.get('FIREBASE_WEB_MESSAGING_SENDER_ID'),
        projectId: dotenv.get('FIREBASE_WEB_PROJECT_ID'),
        authDomain: dotenv.get('FIREBASE_WEB_AUTH_DOMAIN'),
        storageBucket: dotenv.get('FIREBASE_WEB_STORAGE_BUCKET'),
      );

  static FirebaseOptions get android => FirebaseOptions(
        apiKey: dotenv.get('FIREBASE_ANDROID_API_KEY'),
        appId: dotenv.get('FIREBASE_ANDROID_APP_ID'),
        messagingSenderId: dotenv.get('FIREBASE_ANDROID_MESSAGING_SENDER_ID'),
        projectId: dotenv.get('FIREBASE_ANDROID_PROJECT_ID'),
        storageBucket: dotenv.get('FIREBASE_ANDROID_STORAGE_BUCKET'),
      );

  static FirebaseOptions get windows => FirebaseOptions(
        apiKey: dotenv.get('FIREBASE_WINDOWS_API_KEY'),
        appId: dotenv.get('FIREBASE_WINDOWS_APP_ID'),
        messagingSenderId: dotenv.get('FIREBASE_WINDOWS_MESSAGING_SENDER_ID'),
        projectId: dotenv.get('FIREBASE_WINDOWS_PROJECT_ID'),
        authDomain: dotenv.get('FIREBASE_WINDOWS_AUTH_DOMAIN'),
        storageBucket: dotenv.get('FIREBASE_WINDOWS_STORAGE_BUCKET'),
      );
}
